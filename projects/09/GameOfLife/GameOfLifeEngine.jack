class GameOfLifeEngine {

  field Cursor cursor;
  field Grid grid;
  field int rowCount;
  field int colCount;
  field GridPainter gridPainter;

  constructor GameOfLifeEngine new() {
    let rowCount = 16;
    let colCount = 32;
    let cursor = Cursor.new(rowCount, colCount);
    let gridPainter = GridPainter.new(cursor);
    let grid = Grid.new(rowCount, colCount, gridPainter);
    return this;
  }

  method void run() {
    var char key;
    var char previousKey;
    var Grid newGrid;

    var int curRow;
    var int curCol;
    var boolean exit;
    let exit = false;

    do drawCursor();

    while (~exit) {
      while ((key = 0) & (~exit)) {
        do Sys.wait(50);
        let key = Keyboard.keyPressed();
      }

      if(key = 81) { let exit = true; } // exit

      while ((~(key = 0)) & (~exit)) {
        if((key > 129) & (key < 134)) { // arrow keys
          do clearCursor();
          do cursor.move(key - 130);
          do drawCursor();
          do Sys.wait(100);
        } else {
          if(key = 129 & ~(previousKey = 129)) { // backspace
            let curRow = cursor.getRow();
            let curCol = cursor.getCol();
            do grid.toggle(curRow, curCol);
            do Sys.wait(30);
          } else {
            if(key = 67) { // c
              let newGrid = grid.tick();
              do grid.dispose();

              let grid = newGrid;
              let key = Keyboard.keyPressed();
            }
          }
        }
        let previousKey = key;
        let key = Keyboard.keyPressed();
      }
    }

    do cursor.dispose();
    do grid.dispose();
    return;
  }

  method void clearCursor() {
    var int row;
    var int col;
    var boolean squareIsAlive;

    let row = cursor.getRow();
    let col = cursor.getCol();
    let squareIsAlive = grid.alive(row, col);

    if(~squareIsAlive) {
      do gridPainter.paintSquare(false, row, col);
    }

    return;
  }

  method void drawCursor() {
    var int row;
    var int col;

    let row = cursor.getRow();
    let col = cursor.getCol();

    do gridPainter.drawSquare(row, col);
    return;
  }

  method void dispose() {
    do cursor.dispose();
    return;
  }

}
